// Code generated by github.com/ungerik/pkgreflect DO NOT EDIT.

package anonymiser

import (
	"reflect"

	"github.com/icrowley/fake"
)

var Functions = map[string]reflect.Value{
	"Brand":                    reflect.ValueOf(fake.Brand),
	"Character":                reflect.ValueOf(fake.Character),
	"Characters":               reflect.ValueOf(fake.Characters),
	"CharactersN":              reflect.ValueOf(fake.CharactersN), //func fake.CharactersN(n int) string
	"City":                     reflect.ValueOf(fake.City),
	"Color":                    reflect.ValueOf(fake.Color),
	"Company":                  reflect.ValueOf(fake.Company),
	"Continent":                reflect.ValueOf(fake.Continent),
	"Country":                  reflect.ValueOf(fake.Country),
	"CreditCardNum":            reflect.ValueOf(fake.CreditCardNum), //func fake.CreditCardNum(vendor string) string
	"CreditCardType":           reflect.ValueOf(fake.CreditCardType),
	"Currency":                 reflect.ValueOf(fake.Currency),
	"CurrencyCode":             reflect.ValueOf(fake.CurrencyCode),
	"Day":                      reflect.ValueOf(fake.Day),
	"Digits":                   reflect.ValueOf(fake.Digits),
	"DigitsN":                  reflect.ValueOf(fake.DigitsN), //func fake.DigitsN(n int) string
	"DomainName":               reflect.ValueOf(fake.DomainName),
	"DomainZone":               reflect.ValueOf(fake.DomainZone),
	"EmailAddress":             reflect.ValueOf(fake.EmailAddress),
	"EmailBody":                reflect.ValueOf(fake.EmailBody),
	"EmailSubject":             reflect.ValueOf(fake.EmailSubject),
	"FemaleFirstName":          reflect.ValueOf(fake.FemaleFirstName),
	"FemaleFullName":           reflect.ValueOf(fake.FemaleFullName),
	"FemaleFullNameWithPrefix": reflect.ValueOf(fake.FemaleFullNameWithPrefix),
	"FemaleFullNameWithSuffix": reflect.ValueOf(fake.FemaleFullNameWithSuffix),
	"FemaleLastName":           reflect.ValueOf(fake.FemaleLastName),
	"FemalePatronymic":         reflect.ValueOf(fake.FemalePatronymic),
	"FirstName":                reflect.ValueOf(fake.FirstName),
	"FullName":                 reflect.ValueOf(fake.FullName),
	"FullNameWithPrefix":       reflect.ValueOf(fake.FullNameWithPrefix),
	"FullNameWithSuffix":       reflect.ValueOf(fake.FullNameWithSuffix),
	"Gender":                   reflect.ValueOf(fake.Gender),
	"GenderAbbrev":             reflect.ValueOf(fake.GenderAbbrev),
	"GetLangs":                 reflect.ValueOf(fake.GetLangs),
	"HexColor":                 reflect.ValueOf(fake.HexColor),
	"HexColorShort":            reflect.ValueOf(fake.HexColorShort),
	"IPv4":                     reflect.ValueOf(fake.IPv4),
	"IPv6":                     reflect.ValueOf(fake.IPv6),
	"Industry":                 reflect.ValueOf(fake.Industry),
	"JobTitle":                 reflect.ValueOf(fake.JobTitle),
	"Language":                 reflect.ValueOf(fake.Language),
	"LastName":                 reflect.ValueOf(fake.LastName),
	"Latitude":                 reflect.ValueOf(fake.Latitude),
	"LatitudeDegrees":          reflect.ValueOf(fake.LatitudeDegrees),
	"LatitudeDirection":        reflect.ValueOf(fake.LatitudeDirection),
	"LatitudeMinutes":          reflect.ValueOf(fake.LatitudeMinutes),
	"LatitudeSeconds":          reflect.ValueOf(fake.LatitudeSeconds),
	"Longitude":                reflect.ValueOf(fake.Longitude),
	"LongitudeDegrees":         reflect.ValueOf(fake.LongitudeDegrees),
	"LongitudeDirection":       reflect.ValueOf(fake.LongitudeDirection),
	"LongitudeMinutes":         reflect.ValueOf(fake.LongitudeMinutes),
	"LongitudeSeconds":         reflect.ValueOf(fake.LongitudeSeconds),
	"MaleFirstName":            reflect.ValueOf(fake.MaleFirstName),
	"MaleFullName":             reflect.ValueOf(fake.MaleFullName),
	"MaleFullNameWithPrefix":   reflect.ValueOf(fake.MaleFullNameWithPrefix),
	"MaleFullNameWithSuffix":   reflect.ValueOf(fake.MaleFullNameWithSuffix),
	"MaleLastName":             reflect.ValueOf(fake.MaleLastName),
	"MalePatronymic":           reflect.ValueOf(fake.MalePatronymic),
	"Model":                    reflect.ValueOf(fake.Model),
	"Month":                    reflect.ValueOf(fake.Month),
	"MonthNum":                 reflect.ValueOf(fake.MonthNum),
	"MonthShort":               reflect.ValueOf(fake.MonthShort),
	"Paragraph":                reflect.ValueOf(fake.Paragraph),
	"Paragraphs":               reflect.ValueOf(fake.Paragraphs),
	"ParagraphsN":              reflect.ValueOf(fake.ParagraphsN), //func fake.ParagraphsN(n int) string
	"Password":                 reflect.ValueOf(fake.Password),    //func fake.Password(atLeast int, atMost int, allowUpper bool, allowNumeric bool, allowSpecial bool) string
	"Patronymic":               reflect.ValueOf(fake.Patronymic),
	"Phone":                    reflect.ValueOf(fake.Phone),
	"Product":                  reflect.ValueOf(fake.Product),
	"ProductName":              reflect.ValueOf(fake.ProductName),
	"Sentence":                 reflect.ValueOf(fake.Sentence),
	"Sentences":                reflect.ValueOf(fake.Sentences),
	"SentencesN":               reflect.ValueOf(fake.SentencesN), //func fake.SentencesN(n int) string
	"SimplePassword":           reflect.ValueOf(fake.SimplePassword),
	"State":                    reflect.ValueOf(fake.State),
	"StateAbbrev":              reflect.ValueOf(fake.StateAbbrev),
	"Street":                   reflect.ValueOf(fake.Street),
	"StreetAddress":            reflect.ValueOf(fake.StreetAddress),
	"Title":                    reflect.ValueOf(fake.Title),
	"TopLevelDomain":           reflect.ValueOf(fake.TopLevelDomain),
	"UserAgent":                reflect.ValueOf(fake.UserAgent),
	"UserName":                 reflect.ValueOf(fake.UserName),
	"WeekDay":                  reflect.ValueOf(fake.WeekDay),
	"WeekDayShort":             reflect.ValueOf(fake.WeekDayShort),
	"WeekdayNum":               reflect.ValueOf(fake.WeekdayNum),
	"Word":                     reflect.ValueOf(fake.Word),
	"Words":                    reflect.ValueOf(fake.Words),
	"WordsN":                   reflect.ValueOf(fake.WordsN), //func fake.WordsN(n int) string
	"Year":                     reflect.ValueOf(fake.Year),   //func fake.Year(from int, to int) int
	"Zip":                      reflect.ValueOf(fake.Zip),
}
